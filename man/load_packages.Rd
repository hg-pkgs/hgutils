% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_functions.R
\name{load_packages}
\alias{load_packages}
\alias{load_package_collection}
\alias{load_common_packages}
\alias{list_common_packages}
\title{Make packages ready for usage}
\usage{
load_packages(..., install_packages = TRUE, force_install = FALSE,
  upgrade = FALSE)

load_package_collection(collection_name = c("data_import", "image_import",
  "ggplot", "grid", "survival", "processing", "shiny", "development"))

load_common_packages(...)

list_common_packages()
}
\arguments{
\item{...}{List of package names and other options.}

\item{install_packages}{Whether to install the selected packages.}

\item{force_install}{Whether to install packages even if they are installed already.}

\item{upgrade}{Whether to upgrade outdated packages. Defaults to \code{FALSE}.}

\item{collection_name}{One or multiple collection names. Must be in \code{"data_import","image_import","ggplot",
"grid","survival","processing","shiny","development"}}
}
\value{
Returns invisibly a list with additional package information and results of installing/upgrading and loading.
}
\description{
Utility function to load and optionally install packages if they are missing. When the function terminates,
packages are installed (if necessary), upgraded to the latest version (if necessary) and loaded.
}
\details{
\code{load_packages} optionally installs, upgrades and attaches packages to the work space for a list of specified packages.
\code{use_common_packages} is a convenient utility which does the same for a prespecified list of common package names
defined in \code{list_common_packages}. The dots parameter is passed on to \code{load_packages}.

\code{load_package_collection} loads a collection of useful packages, identified by a collection name. This is used to
load similar packages for specific programming tasks.
The possible collections are:
\itemize{
\item \code{data_import}:  readxl, writexl, foreign, utils, haven
\item \code{image_import}: png, bmp, rtiff, rgdal
\item \code{ggplot}: ggplot2, ggthemes, ggmap, colorspace, reshape2, RColorBrewer, Cairo
\item \code{grid}: grid, gridExtra, gridGraphics
\item \code{survival}: survival, Hmisc, rms, mice
\item \code{processing}: magrittr, dplyr, stringr, lubridate, tibble, utils, mice
\item \code{shiny}: shiny, shinydashboard, shinyBS, shinyjs, plotly, shinycssloaders, shinyalert, shinythemes
\item \code{development}: devtools, roxygen2, testthat, utils, rhub
}
}
\examples{
\dontrun{
# Package names can be given as a vector or one-by-one
load_packages(c('magrittr','dplyr'))
load_packages('magrittr','dplyr',install_packages=FALSE)

# These are equivalent
load_common_packages()
load_packages(list_common_packages())

#load package collection "processing"
#installs/loads dplyr, lubridate, magrittr, mice, stringr, tibble and utils
load_package_collection("processing")}
}
\seealso{
\code{\link{load_package_collection}} for loading packages collections.
\code{\link[utils]{install.packages}} for installation of new packages,
\code{\link[utils]{update.packages}} for updating outdated packages,
\code{\link[base]{library}} for load and attaching packages.

Other developer functions: \code{\link{crossref_description}},
  \code{\link{generic_implementations}},
  \code{\link{update_settings}},
  \code{\link{valid_pkgname}}
}
\concept{developer functions}
